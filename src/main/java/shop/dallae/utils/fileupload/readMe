UtilLocal.java 파일은 테스트용 
--집에서 사용할때 	
public static final String uploadPath = "C:\\Users\\koitt03-A\\git\\dallae\\src\\main\\webapp\\resources\\img\\product";
이부분을 집에 로컬 경로로 바꿔주셔야 합니다.


Util.java 파일은 AWS업로드용입니다. 

Product 컨트롤러에

///////////////
	@RequestMapping(value = "/product/{productNumber}", method = RequestMethod.POST)
	@ResponseBody
	public Integer updateProduct(MultipartHttpServletRequest multipartHttpServletRequest, @PathVariable Integer productNumber) {
		System.out.println(productNumber);
		Product product =PM.MapToVo(///////UtilLocal/////////.saveFile(multipartHttpServletRequest), Product.class);
		product.setProductNumber(productNumber);
		return productService.updateProduct(product);
	}
	@RequestMapping(value = "/product", method = RequestMethod.POST)
	@ResponseBody
	public Integer insertProduct(MultipartHttpServletRequest multipartHttpServletRequest) {
		Product product =PM.MapToVo(///////UtilLocal////////.saveFile(multipartHttpServletRequest), Product.class);
		return productService.insertProduct(product);
	}
	
	///////////
	
이 부분에서 UtilLocal부분을 Util로 바꾸어서 프로젝트 완성시 제출하면 됨


젠킨스 배포불량의 원인으로 예상되어 파일 지우고 이곳에 저장해 놓음
/*package shop.dallaeshop.dallae.utils.fileupload;

	import java.io.File;
	import java.io.IOException;
	import java.util.HashMap;
	import java.util.Iterator;
	import java.util.Map;

	import org.springframework.web.multipart.MultipartFile;
	import org.springframework.web.multipart.MultipartHttpServletRequest;

	public class UtilLocal {

		public static final String uploadPath = "C:\\jsp_study\\workspace\\git\\dallae\\src\\main\\webapp\\resources\\img\\product";

		public static Map<String, Object> saveFile(MultipartHttpServletRequest request){
			Map<String, Object> map = new HashMap<String, Object>();
			
			Map<String, Object> data = request.getParameterMap();
			Iterator<String> it = data.keySet().iterator();
			
			while(it.hasNext()) {
				String key = it.next();
				map.put(key, data.get(key));
			}
			
			Map<String, MultipartFile> files = request.getFileMap();
			it = request.getFileMap().keySet().iterator();
			String dataName = "";
			String key = "";
			int cnt = 1;
			while (it.hasNext()) {
				key = it.next();
				System.out.println(key);
				String fileName = files.get(key).getOriginalFilename();

				if (!fileName.equals("")) {
					String extensionName = fileName.substring(fileName.lastIndexOf("."));// 확장자명 뽑아옴
					String lastFileName = System.currentTimeMillis() +"num"+ cnt + extensionName;// 이름=업로드시간+확장자명
					File uploadFile = new File(uploadPath, lastFileName);
					try {
						files.get(key).transferTo(uploadFile);
						dataName += lastFileName + "|";
						cnt++;
					} catch (IllegalStateException | IOException e) {
						e.printStackTrace();
					}

				}

			}
			dataName = dataName.substring(0, dataName.length() - 1);
			map.put("productImage", dataName);

			System.out.println(map);
			return map;
		}

		public static void deleteFile(String filePath) {
			File file = new File(filePath);
			if (file.exists()) {
				file.delete();
			}

		}
	}
*/